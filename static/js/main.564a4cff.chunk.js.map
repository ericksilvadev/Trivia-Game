{"version":3,"sources":["components/InputCard.jsx","redux/actions/index.js","redux/fetchs/fetchToken.js","components/QuestionIcons.jsx","pages/Login.jsx","redux/fetchs/fetchGravatar.js","components/Header.jsx","components/Timer.jsx","components/Button.jsx","components/Question.jsx","redux/fetchs/fetchQuiz.js","functions/randomize.js","pages/Game.jsx","components/Select.jsx","pages/Settings.jsx","pages/Ranking.jsx","assets/feedbackGraph.js","pages/FeedBack.jsx","redux/reducers/gravatar.js","redux/reducers/quiz.js","redux/reducers/user.js","redux/reducers/index.js","redux/store/index.js","index.js","App.js"],"names":["InputCard","labelText","id","name","type","value","onChange","className","htmlFor","data-testid","actionGetTokenError","fetchToken","dispatch","a","async","fetch","resp","ok","json","respObject","token","localStorage","setItem","JSON","stringify","ranking","state","QuestionIcons","Login","email","playerName","validation","redirect","onHandlerChange","bind","onValidation","onSubmit","getToken","this","props","test","length","setState","target","event","preventDefault","saveUser","amount","parse","getItem","player","gravatarEmail","score","assertions","to","window","matchMedia","matches","src","alt","disabled","Component","connect","user","data","fetchGravatar","hash","fechamento","md5","toLowerCase","trim","toString","then","response","resolve","payload","catch","err","Header","saveImg","IMG_URL","React","pushFetch","url","Timer","timer","Button","loading","quiz","timeout","timeoutTrue","onClick","Question","button","showCorrect","handleClickButton","handleClickNext","changeBorder","checkQuestion","stopTimer","dataset","testid","timeoutFalse","startTimer","nextQuestion","question","randomIndex","alternatives","correct_answer","incorrect_answers","map","index","correct","isCorrect","category","i","key","fetchQuiz","difficulty","typeSelected","diffSelected","console","log","URL","results","incorrects","atob","incorrect","randomize","qtd","random","randomNumber","Math","round","includes","push","Game","position","gameOver","completeRandomIndex","getQuiz","clearInterval","interval","questions","prev","prevState","points","local","picture","checkPlayer","some","rank","updatedRanking","sec","start","maxTime","oneSec","setInterval","Select","change","options","option","defaultProps","Settings","categoriesData","getCategory","addSetting","trivia_categories","dispatchSetting","find","categories","Ranking","sort","b","style","widthGraph","widthBorder","heightGraph","backgroundColor","lineColor","fontSizeBackground","percentSide","widthLine","fontBackground","widthBar","fontSizeBar","fontBar","fontColordifBar","fontColor","topPercent","withLegend","fontLegend","fontLegendSize","fontColorLegend","colorLegend","borderLegend","colorBorderLegend","baseName","legendSide","legendVertical","borderColor","FeedBack","Assertions","Errors","maxPercent","colors","INITIAL_STATE","gravatar","reducerGravatar","action","quizReducer","errorToken","reducerUser","error","reducer","combineReducers","store","createStore","composeWithDevTools","applyMiddleware","thunk","Cypress","ReactDOM","render","exact","path","component","document","getElementById"],"mappings":"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","file":"static/js/main.564a4cff.chunk.js","sourcesContent":["import React from 'react';\nimport { string, func, oneOfType, number } from 'prop-types';\n\nconst InputCard = ({ labelText, id, name, type, value, onChange }) => (\n  <div className=\"input-container\">\n    <label htmlFor={ id }>\n      { labelText }\n      <br />\n      <input\n        className=\"login-input\"\n        id={ id }\n        name={ name }\n        type={ type }\n        value={ value }\n        data-testid={ id }\n        onChange={ onChange }\n      />\n    </label>\n  </div>\n);\n\nInputCard.propTypes = {\n  labelText: string.isRequired,\n  id: string.isRequired,\n  value: oneOfType([string, number]).isRequired,\n  onChange: func.isRequired,\n  type: string.isRequired,\n  name: string.isRequired,\n};\n\nexport default InputCard;\n","export const GET_TOKEN_SUCESS = 'GET_TOKEN_SUCESS';\nexport const GET_TOKEN_ERROR = 'GET_TOKEN_ERROR';\nexport const FETCH_SUCCESS = 'FETCH_SUCCESS';\nexport const GET_QUIZ = 'GET_QUIZ';\nexport const FETCHING_QUIZ = 'FETCHING_QUIZ';\nexport const FETCH_QUIZ_FAIL = 'FETCH_QUIZ_FAIL';\nexport const TIMEOUT_FALSE = 'TIMEOUT_FALSE';\nexport const TIMEOUT_TRUE = 'TIMEOUT_TRUE';\nexport const SAVE_DATA_USER = 'SAVE_DATA_USER';\nexport const SAVE_IMG_URL = 'SAVE_IMG_URL';\n\nexport const timeoutFalse = () => ({ type: TIMEOUT_FALSE });\nexport const timeoutTrue = () => ({ type: TIMEOUT_TRUE });\nexport const ADD_SETTING = 'ADD_SETTING';\n\nexport const saveImgUrl = (payload) => ({ type: SAVE_IMG_URL, payload });\n\nexport const getQuiz = (payload) => ({ type: GET_QUIZ, payload });\nexport const fetchingQuiz = () => ({ type: FETCHING_QUIZ });\n\nexport const getGravatar = (payload) => ({ type: FETCH_SUCCESS, payload });\n\nexport const actionGetTokenSucess = (state) => ({ type: GET_TOKEN_SUCESS, state });\n\nexport const actionGetTokenError = { type: GET_TOKEN_ERROR };\n\nexport const actionAddSetting = (state) => ({ type: ADD_SETTING, state });\n\nexport const actionSaveDataUser = (state) => ({ type: SAVE_DATA_USER, state });\n","import { actionGetTokenError, actionGetTokenSucess } from '../actions';\n\nconst fetchToken = () => async (dispatch) => {\n  const resp = await fetch('https://opentdb.com/api_token.php?command=request');\n  if (!resp.ok) return dispatch(actionGetTokenError);\n  const respObject = await resp.json();\n  const { token } = respObject;\n  localStorage.setItem('token', JSON.stringify(token));\n  if (!localStorage.ranking)localStorage.setItem('ranking', JSON.stringify([]));\n  dispatch(actionGetTokenSucess({ token }));\n};\n\nexport default fetchToken;\n","import React from 'react';\n\nexport default function QuestionIcons() {\n  return (\n    <ul className=\"question-marks\">\n      <li className=\"fas fa-question\" />\n      <li className=\"fas fa-question\" />\n      <li className=\"fas fa-question\" />\n      <li className=\"fas fa-question\" />\n      <li className=\"fas fa-question\" />\n      <li className=\"fas fa-question\" />\n      <li className=\"fas fa-question\" />\n      <li className=\"fas fa-question\" />\n      <li className=\"fas fa-question\" />\n      <li className=\"fas fa-question\" />\n    </ul>\n  );\n}\n","import React, { Component } from 'react';\nimport { Link, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { func, string, number } from 'prop-types';\nimport InputCard from '../components/InputCard';\nimport fetchToken from '../redux/fetchs/fetchToken';\nimport { actionSaveDataUser } from '../redux/actions';\nimport QuestionIcons from '../components/QuestionIcons';\n\nclass Login extends Component {\n  constructor() {\n    super();\n    this.state = {\n      email: '',\n      playerName: '',\n      validation: true,\n      redirect: false,\n    };\n    this.onHandlerChange = this.onHandlerChange.bind(this);\n    this.onValidation = this.onValidation.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    const { getToken } = this.props;\n    getToken();\n  }\n\n  onValidation() {\n    const min = 3;\n    const { email, playerName } = this.state;\n    const validation = !(/\\w+@\\w+.com/.test(email)\n     && playerName.length > min\n     && (/[A-z\\s]+/).test(playerName));\n    this.setState({ validation });\n  }\n\n  onHandlerChange({ target }) {\n    const { name, value } = target;\n    this.setState({ [name]: value }, () => this.onValidation());\n  }\n\n  onSubmit(event) {\n    event.preventDefault();\n    const { email, playerName } = this.state;\n    const { saveUser, amount } = this.props;\n    saveUser({ email, playerName });\n    this.setState({ redirect: true });\n    const state = JSON.parse(localStorage.getItem('state')) || {};\n    localStorage.setItem(\n      'state',\n      JSON.stringify({\n        player: {\n          ...state.player,\n          name: playerName,\n          gravatarEmail: email,\n          score: 0,\n          assertions: 0,\n          amount,\n        },\n      }),\n    );\n  }\n\n  render() {\n    const { token } = this.props;\n    const { email, playerName, validation, redirect } = this.state;\n    if (redirect && token) { return <Redirect to=\"/game\" />; }\n    if (window.matchMedia('(max-width: 768px)').matches) {\n      return (\n        <>\n          <QuestionIcons />\n          <p className=\"mobile\">\n            Entre pelo desktop para visualizar esta aplicação\n          </p>\n        </>\n      );\n    }\n    return (\n      <div className=\"login\">\n        <img className=\"logo\" src=\"./images/trivia.png\" alt=\"trivia logo\" />\n        <Link to=\"/settings\">\n          <button\n            className=\"config-btn\"\n            data-testid=\"btn-settings\"\n            type=\"button\"\n          >\n            <i className=\"fas fa-cog\" />\n          </button>\n        </Link>\n        <form className=\"login-form\" onSubmit={ this.onSubmit }>\n          <InputCard\n            labelText=\"Nome\"\n            id=\"input-player-name\"\n            name=\"playerName\"\n            value={ playerName }\n            onChange={ this.onHandlerChange }\n          />\n          <InputCard\n            labelText=\"Email\"\n            id=\"input-gravatar-email\"\n            name=\"email\"\n            type=\"texto\"\n            value={ email }\n            onChange={ this.onHandlerChange }\n          />\n          <div className=\"buttons\">\n            <button\n              className=\"login-btn\"\n              data-testid=\"btn-play\"\n              type=\"submit\"\n              disabled={ validation }\n            >\n              Jogar\n            </button>\n          </div>\n        </form>\n        <QuestionIcons />\n      </div>\n    );\n  }\n}\n\nconst mapDipatchToProps = (dispatch) => ({\n  getToken: (data) => dispatch(fetchToken(data)),\n  saveUser: (data) => dispatch(actionSaveDataUser(data)),\n\n});\n\nconst mapStateToProps = (state) => ({\n  token: state.user.token,\n  amount: state.user.amount,\n});\n\nexport default connect(mapStateToProps, mapDipatchToProps)(Login);\n\nLogin.propTypes = {\n  getToken: func.isRequired,\n  saveUser: func.isRequired,\n  token: string.isRequired,\n  amount: number.isRequired,\n};\n","import md5 from 'crypto-js/md5';\nimport { getGravatar } from '../actions';\n\nconst fetchGravatar = (hash) => {\n  const fechamento = md5(hash.toLowerCase().trim()).toString();\n  return (dispatch) => {\n    fetch(`https://www.gravatar.com/avatar/${fechamento}`)\n      .then((response) => response.json())\n      .then((resolve) => dispatch(getGravatar(resolve)))\n      .catch((err) => err);\n  };\n};\n\nexport default fetchGravatar;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport md5 from 'crypto-js/md5';\nimport PropTypes from 'prop-types';\nimport fetchGravatar from '../redux/fetchs/fetchGravatar';\nimport { saveImgUrl } from '../redux/actions';\n\nclass Header extends React.Component {\n  render() {\n    const { email, playerName, saveImg } = this.props;\n    const hash = md5(email.toLowerCase().trim()).toString();\n    const IMG_URL = `https://www.gravatar.com/avatar/${hash}`;\n    saveImg(IMG_URL);\n    const { player: { score } } = JSON.parse(localStorage.getItem('state'));\n    return (\n      <header className=\"header\">\n        <div className=\"player-info\">\n          <img\n            src={ IMG_URL }\n            alt=\"profile\"\n            data-testid=\"header-profile-picture\"\n            className=\"profile-pic\"\n          />\n          <p data-testid=\"header-player-name\" className=\"name\">{ playerName }</p>\n        </div>\n        <div className=\"score-container\">\n          <span className=\"score-txt\">Score: </span>\n          <p data-testid=\"header-score\" className=\"score\">{ score }</p>\n        </div>\n      </header>\n\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  pushFetch: (state) => dispatch(fetchGravatar(state)),\n  saveImg: (url) => dispatch(saveImgUrl(url)),\n});\n\nconst mapStateToProps = (state) => ({\n  email: state.user.email,\n  playerName: state.user.playerName,\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Header);\n\nHeader.propTypes = {\n  email: PropTypes.string.isRequired,\n  saveImg: PropTypes.func.isRequired,\n  playerName: PropTypes.string.isRequired,\n};\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { timeoutTrue } from '../redux/actions';\n\nclass Timer extends Component {\n  render() {\n    const { timer } = this.state;\n    return (\n      <p>{timer}</p>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  timeoutTrue: () => dispatch(timeoutTrue()),\n});\n\nconst mapStateToProps = (state) => ({\n  loading: state.quiz.loading,\n  timeout: state.quiz.timeout,\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Timer);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass Button extends Component {\n  render() {\n    const { onClick } = this.props;\n    return (\n      <button\n        className=\"next-btn\"\n        data-testid=\"btn-next\"\n        onClick={ onClick }\n        type=\"button\"\n      >\n        Próxima\n\n      </button>\n    );\n  }\n}\n\nexport default Button;\n\nButton.propTypes = {\n  onClick: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Button from './Button';\nimport { timeoutFalse as actionTimeoutFalse } from '../redux/actions';\n\nclass Question extends Component {\n  constructor() {\n    super();\n    this.state = {\n      button: false,\n      showCorrect: false,\n    };\n    this.handleClickButton = this.handleClickButton.bind(this);\n    this.handleClickNext = this.handleClickNext.bind(this);\n    this.changeBorder = this.changeBorder.bind(this);\n  }\n\n  handleClickButton({ target }) {\n    const { checkQuestion, stopTimer } = this.props;\n    const id = target.dataset.testid;\n    if (id === 'correct-answer') checkQuestion();\n    this.setState({ button: true });\n    this.changeBorder();\n    stopTimer();\n  }\n\n  handleClickNext() {\n    const { timeoutFalse, startTimer, timeout, nextQuestion } = this.props;\n    if (timeout) {\n      startTimer(1, true);\n    } else { startTimer(0, false); }\n    timeoutFalse();\n    nextQuestion();\n    this.setState({ button: false, showCorrect: false });\n  }\n\n  changeBorder() {\n    this.setState({\n      showCorrect: true,\n    });\n  }\n\n  render() {\n    const { button, showCorrect } = this.state;\n    const { loading, timeout, question, randomIndex } = this.props;\n    if (loading) { return <img src=\"https://c.tenor.com/I6kN-6X7nhAAAAAj/loading-buffering.gif\" alt=\"loading\" />; }\n    const alternatives = question.correct_answer ? [\n      ...question.incorrect_answers\n        .map((alt, index) => ({ correct: false,\n          alt,\n          index,\n          isCorrect: 'incorrect' })),\n      { correct: true,\n        alt: question.correct_answer,\n        isCorrect: 'correct' }] : [];\n    return (\n      <div className=\"question-container\">\n        <h1 data-testid=\"question-category\" className=\"category\">{question.category}</h1>\n        { question.question\n        && <p data-testid=\"question-text\" className=\"question\">{question.question}</p> }\n\n        <div className=\"alternatives\">\n          {randomIndex.map((index) => {\n            if (!alternatives[index]) return null;\n            const { correct, alt, index: i, isCorrect } = alternatives[index];\n            return (\n              <div key={ index } className=\"alternative\">\n                <button\n                  disabled={ timeout }\n                  type=\"button\"\n                  data-testid={ correct ? 'correct-answer' : `wrong-answer${i}` }\n                  onClick={ this.handleClickButton }\n                  className={ showCorrect || timeout ? isCorrect : '' }\n                >\n                  {alt}\n                </button>\n              </div>\n            );\n          })}\n        </div>\n        { (button || timeout) && <Button onClick={ this.handleClickNext } /> }\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  loading: state.quiz.loading,\n  timeout: state.quiz.timeout,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  timeoutFalse: () => dispatch(actionTimeoutFalse()),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Question);\n\nQuestion.propTypes = {\n  timeoutFalse: PropTypes.func.isRequired,\n  startTimer: PropTypes.func.isRequired,\n  stopTimer: PropTypes.func.isRequired,\n  checkQuestion: PropTypes.func.isRequired,\n  nextQuestion: PropTypes.func.isRequired,\n  timeout: PropTypes.bool.isRequired,\n  loading: PropTypes.bool.isRequired,\n  randomIndex: PropTypes.arrayOf(PropTypes.number).isRequired,\n  question: PropTypes.shape({\n    category: PropTypes.string,\n    question: PropTypes.string,\n    correct_answer: PropTypes.string,\n    incorrect_answers: PropTypes.arrayOf(PropTypes.string),\n  }).isRequired,\n};\n","import { fetchingQuiz, getQuiz } from '../actions';\n\nconst decodeResults = (questions) => {\n  const decoded = questions\n    .map(({\n      category,\n      type,\n      difficulty,\n      question,\n      correct_answer: correct,\n      incorrect_answers: incorrects,\n    }) => ({\n      category: atob(category),\n      type: atob(type),\n      difficulty: atob(difficulty),\n      question: atob(question),\n      correct_answer: atob(correct),\n      incorrect_answers: incorrects.map((incorrect) => atob(incorrect)),\n    }));\n  return decoded;\n};\n\nconst fetchQuiz = ({ token, amount, id, difficulty, type }) => {\n  const types = { 'multiple choice': 'multiple', 'true/false': 'boolean' };\n  const typeSelected = type === 'any type' ? '' : `&type=${types[type]}`;\n  const diffSelected = difficulty === 'any difficulty' ? '' : `&difficulty=${difficulty}`;\n  console.log(amount);\n  const URL = `https://opentdb.com/api.php?category=${id}${diffSelected}${typeSelected}&amount=${amount}&token=${token}&encode=base64`;\n  console.log(URL);\n  return async (dispatch) => {\n    dispatch(fetchingQuiz());\n    const response = await fetch(URL);\n    const { results } = await response.json();\n    console.log(results);\n    dispatch(getQuiz(decodeResults(results)));\n  };\n};\n\nexport default fetchQuiz;\n","const randomize = (length, qtd) => {\n  const random = [];\n  while (random.length < length) {\n    const randomNumber = Math.round(Math.random() * qtd);\n    if (!random.includes(randomNumber)) {\n      random.push(randomNumber);\n    }\n  }\n  return random;\n};\n\nexport default randomize;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { func, bool, string, number, arrayOf, shape } from 'prop-types';\nimport { Redirect } from 'react-router-dom';\nimport { Question, Header } from '../components/index';\nimport { timeoutTrue as actionTimeoutTrue } from '../redux/actions';\nimport fetchQuiz from '../redux/fetchs/fetchQuiz';\nimport randomize from '../functions/randomize';\n\nclass Game extends Component {\n  constructor() {\n    super();\n    this.state = {\n      timer: 30,\n      position: 0,\n      question: { incorrect_answers: [] },\n      score: 0,\n      gameOver: false,\n      randomIndex: [],\n      assertions: 0,\n\n    };\n    this.timer = this.timer.bind(this);\n    this.startTimer = this.startTimer.bind(this);\n    this.checkQuestion = this.checkQuestion.bind(this);\n    this.nextQuestion = this.nextQuestion.bind(this);\n    this.completeRandomIndex = this.completeRandomIndex.bind(this);\n    this.stopTimer = this.stopTimer.bind(this);\n  }\n\n  componentDidMount() {\n    const { getQuiz, token, amount, id, difficulty, type } = this.props;\n    this.startTimer(0, true);\n    getQuiz({ token, amount, id, difficulty, type });\n    this.completeRandomIndex();\n  }\n\n  completeRandomIndex() {\n    const length = 4;\n    const qty = 3;\n    const randomIndex = randomize(length, qty);\n    this.setState({ randomIndex });\n  }\n\n  stopTimer() {\n    const { timeoutTrue } = this.props;\n    clearInterval(this.interval);\n    timeoutTrue();\n  }\n\n  timer() {\n    const { position } = this.state;\n    const { loading, questions } = this.props;\n    if (!loading) {\n      this.setState((prev) => {\n        if (prev.timer === 0) {\n          this.stopTimer();\n          return;\n        }\n        return ({\n          timer: prev.timer - 1,\n          question: questions[position],\n        });\n      });\n    }\n  }\n\n  checkQuestion() {\n    this.setState((prevState) => {\n      const hard = 3;\n      const { question, timer, score, assertions } = prevState;\n      const { difficulty } = question;\n      const level = difficulty === 'hard' ? hard : 2;\n      const pointsSum = 10;\n      const points = timer * (difficulty === 'hard' ? 1 : level) + score + pointsSum;\n      const state = JSON.parse(localStorage.getItem('state')) || {};\n      const local = JSON.stringify(\n        { player: { ...state.player, score: points, assertions: assertions + 1 } },\n      );\n      localStorage.setItem(\n        'state',\n        local,\n      );\n      return ({\n        score: points,\n        assertions: assertions + 1,\n      });\n    });\n  }\n\n  checkPlayer(ranking, name, score, picture) {\n    const checkPlayer = ranking\n      .some(({ name: n }) => n === name);\n    return !checkPlayer\n      ? [...ranking, { name, score, picture }]\n      : ranking.map((rank) => {\n        if (rank.name !== name) { return rank; }\n        rank.score = rank.score > score ? rank.score : score;\n        return rank;\n      });\n  }\n\n  nextQuestion() {\n    const { questions, picture, name } = this.props;\n    this.setState(({ position }) => ({ position: position + 1 }), () => {\n      const { position } = this.state;\n      const gameOver = position === questions.length;\n      if (gameOver) {\n        const { player: { score } } = JSON.parse(localStorage.getItem('state'));\n        const ranking = JSON.parse(localStorage.getItem('ranking'));\n        const updatedRanking = this.checkPlayer(ranking, name, score, picture);\n        localStorage.setItem('ranking', JSON.stringify(updatedRanking));\n      }\n      this.setState({ question: questions[position], gameOver });\n    });\n    this.completeRandomIndex();\n  }\n\n  startTimer(sec = 0, start) {\n    const maxTime = 30;\n    this.setState({ timer: maxTime + sec });\n    const oneSec = 1000;\n    if (start) {\n      this.interval = setInterval(this.timer, oneSec);\n      this.timer();\n    }\n  }\n\n  render() {\n    const { timer, gameOver, question, score, randomIndex } = this.state;\n    const { questions } = this.props;\n    if (gameOver) { return <Redirect to=\"/feedback\" />; }\n    const endingTimer = 11;\n    return (\n      <div className=\"game\">\n        <Header score={ score } />\n        <div className={ `timer timer--${timer}` }>\n          <p className={ timer < endingTimer ? 'ending-timer' : '' }>{timer}</p>\n        </div>\n        <Question\n          stopTimer={ this.stopTimer }\n          startTimer={ this.startTimer }\n          questions={ questions }\n          checkQuestion={ this.checkQuestion }\n          nextQuestion={ this.nextQuestion }\n          question={ question }\n          randomIndex={ randomIndex }\n        />\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  timeoutTrue: () => dispatch(actionTimeoutTrue()),\n  getQuiz: (data) => dispatch(fetchQuiz(data)),\n});\n\nconst mapStateToProps = (state) => ({\n  token: state.user.token,\n  amount: state.user.amount,\n  id: state.user.id,\n  difficulty: state.user.difficulty,\n  type: state.user.type,\n  questions: state.quiz.questions,\n  loading: state.quiz.loading,\n  timeout: state.quiz.timeout,\n  picture: state.user.picture,\n  name: state.user.playerName,\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Game);\n\nGame.propTypes = {\n  timeoutTrue: func.isRequired,\n  loading: bool.isRequired,\n  getQuiz: func.isRequired,\n  token: string.isRequired,\n  name: string.isRequired,\n  picture: string.isRequired,\n  type: string.isRequired,\n  difficulty: string.isRequired,\n  amount: number.isRequired,\n  id: number.isRequired,\n  questions: arrayOf(shape({\n    category: string,\n    question: string,\n    correct_answer: string,\n    incorrect_answers: arrayOf(string),\n  })).isRequired,\n};\n","import { func, string, arrayOf } from 'prop-types';\nimport React from 'react';\n\nconst Select = (props) => {\n  const { labelText, id, value, change, name, options } = props;\n\n  return (\n    <label htmlFor={ id }>\n      {labelText}\n      <br />\n      <select\n        className=\"select-config\"\n        id={ id }\n        data-testid={ id }\n        value={ value }\n        onChange={ change }\n        name={ name }\n      >\n        {\n          options.map((option) => <option key={ option }>{option}</option>)\n        }\n      </select>\n      <br />\n    </label>\n  );\n};\n\nSelect.propTypes = {\n  labelText: string.isRequired,\n  id: string.isRequired,\n  value: string,\n  change: func.isRequired,\n  name: string.isRequired,\n  options: arrayOf(string).isRequired,\n};\n\nSelect.defaultProps = {\n  value: 'Not found',\n};\n\nexport default Select;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { func } from 'prop-types';\nimport InputCard from '../components/InputCard';\nimport Select from '../components/Select';\nimport { actionAddSetting } from '../redux/actions';\nimport QuestionIcons from '../components/QuestionIcons';\n\nclass Settings extends Component {\n  constructor() {\n    super();\n    this.state = {\n      // error: '',\n      categoriesData: [],\n      category: 'General Knowledge',\n      loading: true,\n      amount: 5,\n      difficulty: 'any difficulty',\n      type: 'any type',\n    };\n\n    this.getCategory = this.getCategory.bind(this);\n    this.onHandlerChange = this.onHandlerChange.bind(this);\n    this.addSetting = this.addSetting.bind(this);\n  }\n\n  componentDidMount() {\n    this.getCategory();\n  }\n\n  onHandlerChange({ target }) {\n    const { name, value } = target;\n    this.setState({ [name]: value });\n  }\n\n  getCategory() {\n    this.setState({ loading: true }, async () => {\n      const resp = await fetch('https://opentdb.com/api_category.php');\n      // if (!resp.ok) this.setState({ error: 'ocorreu um erro com a requisição' });\n      const { trivia_categories: categoriesData } = await resp.json();\n      this.setState({ categoriesData, loading: false });\n    });\n  }\n\n  addSetting() {\n    const { dispatchSetting } = this.props;\n    const { category, categoriesData, amount, difficulty, type } = this.state;\n    const { id } = categoriesData.find(({ name }) => name === category);\n    const { player } = JSON.parse(localStorage.getItem('state'));\n    localStorage.setItem('state', JSON.stringify({ player: { ...player, amount } }));\n    dispatchSetting({ id, amount, difficulty, type });\n  }\n\n  render() {\n    const { categoriesData, category, loading, amount, difficulty, type } = this.state;\n    const categories = categoriesData.map(({ name }) => name);\n    if (loading) { return <img src=\"https://c.tenor.com/I6kN-6X7nhAAAAAj/loading-buffering.gif\" alt=\"loading\" />; }\n    return (\n      <div className=\"config-container\">\n        <header className=\"header-config\">\n          <h1 className=\"settings-title\" data-testid=\"settings-title\"> Configurações </h1>\n        </header>\n        <form onSubmit={ this.addSetting }>\n          <Select\n            labelText=\"Selecione uma categoria\"\n            id=\"category-input\"\n            name=\"category\"\n            value={ category }\n            change={ this.onHandlerChange }\n            options={ categories }\n          />\n          <Select\n            labelText=\"Selecione a dificuldade:\"\n            id=\"difficulty-input\"\n            name=\"difficulty\"\n            value={ difficulty }\n            change={ this.onHandlerChange }\n            options={ ['any difficulty', 'easy', 'medium', 'hard'] }\n          />\n          <Select\n            labelText=\"Selecione um tipo de questão:\"\n            id=\"type-input\"\n            name=\"type\"\n            value={ type }\n            change={ this.onHandlerChange }\n            options={ ['any type', 'multiple choice', 'true/false'] }\n          />\n          <InputCard\n            labelText=\"Quantidade de perguntas:\"\n            id=\"amount\"\n            name=\"amount\"\n            type=\"number\"\n            value={ amount }\n            onChange={ this.onHandlerChange }\n          />\n          <Link to=\"/\">\n            <button type=\"button\" onClick={ this.addSetting }>Aplicar</button>\n          </Link>\n        </form>\n        <QuestionIcons />\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  dispatchSetting: (data) => dispatch(actionAddSetting(data)),\n});\n\nexport default connect(null, mapDispatchToProps)(Settings);\n\nSettings.propTypes = {\n  dispatchSetting: func.isRequired,\n};\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport QuestionIcons from '../components/QuestionIcons';\n\nclass Ranking extends Component {\n  render() {\n    const ranking = JSON.parse(localStorage.getItem('ranking'));\n    return (\n      <div className=\"ranking\">\n        <div className=\"title-ranking\">\n          <h1 data-testid=\"ranking-title\">Ranking</h1>\n          <ul className=\"ranking-list\">\n            {ranking.sort((a, b) => b.score - a.score)\n              .map(({ name, score, picture }, index) => (\n                <li key={ name } data-testid={ `player-name-${index}` }>\n                  <img src={ picture } alt={ name } />\n                  {name}\n                  :\n                  <span\n                    data-testid={ `player-score-${index}` }\n                    className=\"ranking-score\"\n                  >\n                    {score}\n\n                  </span>\n                </li>\n              ))}\n          </ul>\n        </div>\n        <Link to=\"/\">\n          <button\n            type=\"button\"\n            data-testid=\"btn-go-home\"\n          >\n            Voltar ao inicio\n          </button>\n        </Link>\n        <QuestionIcons />\n      </div>\n    );\n  }\n}\n\nexport default Ranking;\n","const style = {\n  widthGraph: '1000',\n  widthBorder: '3',\n  heightGraph: '500',\n  backgroundColor: '#f0f0f0',\n  lineColor: '#f0f0f0',\n  fontSizeBackground: '10',\n  percentSide: 'right',\n  widthLine: '1',\n  fontBackground: 'monospace',\n  widthBar: '91',\n  fontSizeBar: '17',\n  fontBar: 'Poppins, sans-serif',\n  fontColordifBar: false,\n  fontColor: 'black',\n  topPercent: true,\n  withLegend: true,\n  fontLegend: 'Poppins, sans-serif',\n  fontLegendSize: '20',\n  fontColorLegend: '#000000',\n  colorLegend: '#f0f0f0',\n  borderLegend: '#c2c2c2',\n  colorBorderLegend: 'black',\n  baseName: false,\n  legendSide: 'right',\n  legendVertical: 'atop',\n  borderColor: '#c2c2c2',\n};\n\nexport default style;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { GraphicComponent } from 'stylized-graphic-component';\nimport Header from '../components/Header';\nimport style from '../assets/feedbackGraph';\n\nclass FeedBack extends Component {\n  render() {\n    const { player: { assertions, score, amount } } = JSON\n      .parse(localStorage.getItem('state'));\n    const three = 3;\n    return (\n      <div className=\"feedback-container\">\n        <Header />\n        <p className=\"feedback-assertions\">\n          Você acertou\n          {' '}\n          <span data-testid=\"feedback-total-question\">{assertions}</span>\n          {' '}\n          perguntas.\n        </p>\n        <p className=\"feedback-text\" data-testid=\"feedback-text\">\n          {assertions < three ? 'Podia ser melhor...' : 'Mandou bem!' }\n        </p>\n        <p className=\"feedback-score\" data-testid=\"feedback-total-score\">{score}</p>\n        <GraphicComponent\n          style={ style }\n          data={ { Assertions: assertions, Errors: amount - assertions } }\n          maxPercent=\"100%\"\n          colors={ ['#76b041', '#db3a34'] }\n        />\n        <div className=\"buttons\">\n          <Link to=\"/ranking\">\n            <button\n              type=\"button\"\n              data-testid=\"btn-ranking\"\n            >\n              Ver Ranking\n            </button>\n          </Link>\n          <Link to=\"/\">\n            <button\n              data-testid=\"btn-play-again\"\n              type=\"button\"\n            >\n              Jogar novamente\n            </button>\n          </Link>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default FeedBack;\n","import { FETCH_SUCCESS } from '../actions';\n\nconst INITIAL_STATE = {\n  gravatar: '',\n};\n\nconst reducerGravatar = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n  case FETCH_SUCCESS:\n    return { ...state, ...action.payload };\n  default: return state;\n  }\n};\n\nexport default reducerGravatar;\n","import { FETCHING_QUIZ, GET_QUIZ, TIMEOUT_FALSE, TIMEOUT_TRUE } from '../actions/index';\n\nconst INITIAL_STATE = {\n  questions: [],\n  loading: true,\n  timeout: false,\n};\n\nconst quizReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n  case FETCHING_QUIZ:\n    return { ...state, loading: true };\n  case GET_QUIZ:\n    return { ...state, loading: false, questions: action.payload };\n  case TIMEOUT_FALSE:\n    return { ...state, timeout: false };\n  case TIMEOUT_TRUE:\n    return { ...state, timeout: true };\n  default:\n    return state;\n  }\n};\n\nexport default quizReducer;\n","import {\n  ADD_SETTING, GET_TOKEN_ERROR, GET_TOKEN_SUCESS, SAVE_DATA_USER, SAVE_IMG_URL,\n} from '../actions';\n\nconst INITIAL_STATE = {\n  token: '',\n  errorToken: '',\n  playerName: '',\n  email: '',\n  amount: 5,\n  id: 9,\n  picture: '',\n  difficulty: 'any difficulty',\n  type: 'any type',\n};\n\nconst reducerUser = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n  case GET_TOKEN_SUCESS:\n    return { ...state, ...action.state, errorToken: '' };\n\n  case GET_TOKEN_ERROR:\n    return { ...state, error: 'Ocorreu um erro com a requisição do token' };\n\n  case ADD_SETTING:\n    return { ...state, ...action.state };\n\n  case SAVE_DATA_USER:\n    return { ...state, ...action.state };\n\n  case SAVE_IMG_URL:\n    return { ...state, picture: action.payload };\n\n  default: return state;\n  }\n};\n\nexport default reducerUser;\n","import { combineReducers } from 'redux';\nimport gravatar from './gravatar';\nimport quiz from './quiz';\nimport user from './user';\n\nconst reducer = combineReducers({ user, gravatar, quiz });\n\nexport default reducer;\n","import { applyMiddleware, createStore } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\nimport reducer from '../reducers';\n\nconst store = createStore(reducer, composeWithDevTools(applyMiddleware(thunk)));\n\nif (window.Cypress) {\n  window.store = store;\n}\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { HashRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport App from './App';\nimport store from './redux/store';\n\nReactDOM.render(\n  <HashRouter>\n    <Provider store={ store }>\n      <App />\n    </Provider>\n  </HashRouter>,\n  document.getElementById('root'),\n);\n","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport './css/main.css';\nimport { Login, Game, Settings, Ranking, FeedBack } from './pages/index';\n\nexport default function App() {\n  return (\n    <div className=\"App\">\n      <Switch>\n        <Route exact path=\"/\" component={ Login } />\n        <Route path=\"/game\" component={ Game } />\n        <Route path=\"/settings\" component={ Settings } />\n        <Route path=\"/feedback\" component={ FeedBack } />\n        <Route path=\"/ranking\" component={ Ranking } />\n      </Switch>\n    </div>\n  );\n}\n"],"sourceRoot":""}